{"ast":null,"code":"import _toConsumableArray from \"/Users/macbook/Documents/ForStudy/season04-cart/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as types from './../constants/ActionTypes';\nvar data = JSON.parse(localStorage.getItem('cart'));\nvar initialState = data ? data : [];\n\nvar cart = function cart() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var product = action.product,\n      quantity = action.quantity;\n  var index = -1;\n\n  switch (action.type) {\n    case types.ADD_TO_CART:\n      index = findProductInCart(state, product);\n\n      if (index !== -1) {\n        state[index].quantity += quantity;\n      } else {\n        state.push({\n          product: product,\n          quantity: quantity\n        });\n      }\n\n      localStorage.setItem('cart', JSON.stringify(state));\n      return _toConsumableArray(state);\n\n    case types.DELETE_PRODUCT_IN_CART:\n      index = findProductInCart(state, product);\n\n      if (index !== -1) {\n        state.splice(index, 1);\n      } //index === 0 ? delete and change message\n\n\n      localStorage.setItem('cart', JSON.stringify(state));\n      return _toConsumableArray(state);\n\n    case types.UPDATE_PRODUCT_IN_CART:\n      index = findProductInCart(state, product);\n\n      if (index !== -1) {\n        state[index].quantity = quantity;\n      }\n\n      localStorage.setItem('cart', JSON.stringify(state));\n      return _toConsumableArray(state);\n\n    default:\n      return _toConsumableArray(state);\n  }\n};\n\nvar findProductInCart = function findProductInCart(cart, product) {\n  var index = -1;\n\n  if (cart.length > 0) {\n    for (var i = 0; i < cart.length; i++) {\n      if (cart[i].id === product.id) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  return index;\n};\n\nexport default cart;","map":{"version":3,"sources":["/Users/macbook/Documents/ForStudy/season04-cart/src/reducers/cart.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","cart","state","action","product","quantity","index","type","ADD_TO_CART","findProductInCart","push","setItem","stringify","DELETE_PRODUCT_IN_CART","splice","UPDATE_PRODUCT_IN_CART","length","i","id"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AAEA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,IAAMM,IAAI,GAAG,SAAPA,IAAO,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;AAAA,MACrCC,OADqC,GACfD,MADe,CACrCC,OADqC;AAAA,MAC5BC,QAD4B,GACfF,MADe,CAC5BE,QAD4B;AAE3C,MAAIC,KAAK,GAAG,CAAC,CAAb;;AACA,UAAOH,MAAM,CAACI,IAAd;AACI,SAAKb,KAAK,CAACc,WAAX;AACIF,MAAAA,KAAK,GAAGG,iBAAiB,CAACP,KAAD,EAAQE,OAAR,CAAzB;;AACA,UAAGE,KAAK,KAAK,CAAC,CAAd,EAAgB;AACZJ,QAAAA,KAAK,CAACI,KAAD,CAAL,CAAaD,QAAb,IAAyBA,QAAzB;AACH,OAFD,MAEM;AACFH,QAAAA,KAAK,CAACQ,IAAN,CAAW;AACPN,UAAAA,OAAO,EAAPA,OADO;AAEPC,UAAAA,QAAQ,EAARA;AAFO,SAAX;AAIH;;AACDP,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeV,KAAf,CAA7B;AACA,gCAAWA,KAAX;;AACJ,SAAKR,KAAK,CAACmB,sBAAX;AACIP,MAAAA,KAAK,GAAGG,iBAAiB,CAACP,KAAD,EAAQE,OAAR,CAAzB;;AACA,UAAGE,KAAK,KAAK,CAAC,CAAd,EAAgB;AACZJ,QAAAA,KAAK,CAACY,MAAN,CAAaR,KAAb,EAAoB,CAApB;AACH,OAJL,CAIK;;;AACDR,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeV,KAAf,CAA7B;AACA,gCAAWA,KAAX;;AACJ,SAAKR,KAAK,CAACqB,sBAAX;AACIT,MAAAA,KAAK,GAAGG,iBAAiB,CAACP,KAAD,EAAQE,OAAR,CAAzB;;AACA,UAAGE,KAAK,KAAK,CAAC,CAAd,EAAiB;AACbJ,QAAAA,KAAK,CAACI,KAAD,CAAL,CAAaD,QAAb,GAAwBA,QAAxB;AACH;;AACDP,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeV,KAAf,CAA7B;AACA,gCAAWA,KAAX;;AACJ;AAAU,gCAAWA,KAAX;AA3Bd;AA6BH,CAhCD;;AAkCA,IAAIO,iBAAiB,GAAG,SAApBA,iBAAoB,CAACR,IAAD,EAAOG,OAAP,EAAmB;AACvC,MAAIE,KAAK,GAAG,CAAC,CAAb;;AAEA,MAAKL,IAAI,CAACe,MAAL,GAAc,CAAnB,EAAuB;AACnB,SAAM,IAAIC,CAAC,GAAG,CAAd,EAAkBA,CAAC,GAAGhB,IAAI,CAACe,MAA3B,EAAoCC,CAAC,EAArC,EAA0C;AACtC,UAAKhB,IAAI,CAACgB,CAAD,CAAJ,CAAQC,EAAR,KAAed,OAAO,CAACc,EAA5B,EAAiC;AAC7BZ,QAAAA,KAAK,GAAGW,CAAR;AACA;AACH;AACJ;AACJ;;AAED,SAAOX,KAAP;AACH,CAbD;;AAeA,eAAeL,IAAf","sourcesContent":["import * as types from './../constants/ActionTypes';\n\nvar data = JSON.parse(localStorage.getItem('cart'));\n\nvar initialState = data ? data : [];\n\nconst cart = (state = initialState, action) => {\n    var { product, quantity } = action;\n    var index = -1;\n    switch(action.type){\n        case types.ADD_TO_CART :\n            index = findProductInCart(state, product);\n            if(index !== -1){\n                state[index].quantity += quantity;\n            }else {\n                state.push({\n                    product,\n                    quantity\n                })\n            }\n            localStorage.setItem('cart', JSON.stringify(state));\n            return [...state];\n        case types.DELETE_PRODUCT_IN_CART : \n            index = findProductInCart(state, product)\n            if(index !== -1){\n                state.splice(index, 1);\n            }//index === 0 ? delete and change message\n            localStorage.setItem('cart', JSON.stringify(state));\n            return [...state];\n        case types.UPDATE_PRODUCT_IN_CART :\n            index = findProductInCart(state, product)\n            if(index !== -1) {\n                state[index].quantity = quantity;\n            }\n            localStorage.setItem('cart', JSON.stringify(state));\n            return [...state];\n        default : return [...state];\n    }\n}\n\nvar findProductInCart = (cart, product) => {\n    var index = -1;\n\n    if ( cart.length > 0 ) {\n        for ( var i = 0 ; i < cart.length ; i++ ) {\n            if ( cart[i].id === product.id ) {\n                index = i;\n                break;\n            }\n        }\n    }\n\n    return index;\n}\n\nexport default cart;"]},"metadata":{},"sourceType":"module"}